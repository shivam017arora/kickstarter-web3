{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_projectID",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_project_target_price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_projest_deadline_date_unix",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_project_minimum_fund_price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_projectOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_ipfs_cid",
          "type": "bytes32"
        }
      ],
      "name": "ProjectStarted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_project_target_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_projest_deadline_date_unix",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_project_minimum_fund_price",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_ipfs_cid",
          "type": "bytes32"
        }
      ],
      "name": "createNewProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentProjectID",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getProjectInfoByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_projectId",
          "type": "uint16"
        }
      ],
      "name": "getProjectInfoById",
      "outputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjectLists",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "projectId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "projectAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ProjectFactory.ProjectEntity[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_projectAddress",
          "type": "address"
        }
      ],
      "name": "markProjectFundingComplete",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96a68dd92b4e3475a0d28a3101733a071fc4bbb947c2a4122a7eb54a2942fd1a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2860781",
    "logsBloom": "0x
    "blockHash": "0xd68e05fc91b8493c4204a225dd7fe2e1205f43a7c2c3a4497463072f14559b13",
    "transactionHash": "0x96a68dd92b4e3475a0d28a3101733a071fc4bbb947c2a4122a7eb54a2942fd1a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x96a68dd92b4e3475a0d28a3101733a071fc4bbb947c2a4122a7eb54a2942fd1a",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd68e05fc91b8493c4204a225dd7fe2e1205f43a7c2c3a4497463072f14559b13"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "2860781",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cd3c3e0d9b2064bf7c862ba6f1a485d5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_projectID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_project_target_price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_projest_deadline_date_unix\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_project_minimum_fund_price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_projectOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_ipfs_cid\",\"type\":\"bytes32\"}],\"name\":\"ProjectStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_project_target_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projest_deadline_date_unix\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_project_minimum_fund_price\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfs_cid\",\"type\":\"bytes32\"}],\"name\":\"createNewProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProjectID\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getProjectInfoByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_projectId\",\"type\":\"uint16\"}],\"name\":\"getProjectInfoById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectLists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"projectId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"projectAddress\",\"type\":\"address\"}],\"internalType\":\"struct ProjectFactory.ProjectEntity[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_projectAddress\",\"type\":\"address\"}],\"name\":\"markProjectFundingComplete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Shivam Arora\",\"details\":\"Project Management Contract allows users to create projects and manage them\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ProjectManagerContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProjectFactory.sol\":\"ProjectFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/Project.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// Target Value needs to be greater than MINIMUM_TARGET_AMOUNT.\\nerror NeedToSetHigherTarget(uint256 given, uint256 required);\\n\\n/// Min Fund Value needs to be greater than MINIMUM_FUND_RAISE_AMOUNT.\\nerror NeedToSetHigherMinFundPrice(uint256 given, uint256 required);\\n\\n// Funding needs to be greater than set amount\\nerror SpendMoreEth();\\n\\n// State needs to be awaiting in order to fund project\\nerror NotInAwaitingFunding();\\n\\n// Only Owner can Withdraw\\nerror NotProjectOwner();\\n\\n// Can only withdraw after marked as complete\\nerror NotFundingComplete();\\n\\n/**\\n * @title ProjectManagerContract\\n * @author Shivam Arora\\n * @dev Project Management Contract allows users to create projects and manage them\\n */\\n\\ncontract Project is Ownable {\\n    //State\\n    enum State {\\n        AWAITING_FUNDING,\\n        FUNDING_COMLPETE,\\n        OVER\\n    }\\n\\n    // Validation Constants\\n    uint256 private constant MINUMUM_TARGET_AMOUNT = 10 ether;\\n    uint256 private constant MINIMUM_FUND_RAISE_AMOUNT = 1 ether;\\n\\n    // Project variables\\n    bytes32 public immutable ipfs_cid;\\n    uint16 public immutable i_projectID;\\n    uint256 public immutable i_target_price;\\n    uint256 public immutable i_deadline_date_unix;\\n    uint256 public immutable i_minimum_fund_price_in_eth;\\n    string public s_title;\\n    string public s_description;\\n    address public immutable i_projectOwner;\\n    uint256 public s_totalFundingAmount;\\n    State public s_projectState;\\n\\n    //Store information about amount a fund raiser has raised\\n    mapping(address => uint256) public addressToAmount;\\n    address[] public project_funders;\\n\\n    //Constructor\\n    constructor(\\n        uint16 _projectID,\\n        string memory _title,\\n        string memory _description,\\n        uint256 _project_target_price,\\n        uint256 _project_deadline_date_unix,\\n        uint256 _project_minimum_fund_price,\\n        address _projectOwner,\\n        bytes32 _cid\\n    ) {\\n        //Validate\\n        if (_project_target_price * 1 ether <= MINUMUM_TARGET_AMOUNT) {\\n            revert NeedToSetHigherTarget(\\n                _project_target_price,\\n                MINUMUM_TARGET_AMOUNT\\n            );\\n        }\\n        if (\\n            _project_minimum_fund_price * 1 ether <= MINIMUM_FUND_RAISE_AMOUNT\\n        ) {\\n            revert NeedToSetHigherMinFundPrice(\\n                _project_minimum_fund_price,\\n                MINIMUM_FUND_RAISE_AMOUNT\\n            );\\n        }\\n\\n        i_projectID = _projectID;\\n        i_target_price = _project_target_price * 1 ether;\\n        i_deadline_date_unix = _project_deadline_date_unix;\\n        i_minimum_fund_price_in_eth = _project_minimum_fund_price * 1 ether;\\n        s_title = _title;\\n        s_description = _description;\\n        s_projectState = State.AWAITING_FUNDING;\\n        i_projectOwner = _projectOwner;\\n        ipfs_cid = _cid;\\n    }\\n\\n    //Functions\\n    function fund() public payable {\\n        if (msg.value <= i_minimum_fund_price_in_eth) {\\n            revert SpendMoreEth();\\n        }\\n        if (s_projectState != State.AWAITING_FUNDING) {\\n            revert NotInAwaitingFunding();\\n        }\\n        project_funders.push(msg.sender);\\n        addressToAmount[msg.sender] = msg.value;\\n        s_totalFundingAmount += msg.value;\\n    }\\n\\n    function markFundingComplete() public onlyOwner {\\n        s_projectState = State.FUNDING_COMLPETE;\\n    }\\n\\n    function withdraw() public payable {\\n        if (msg.sender != i_projectOwner) {\\n            revert NotProjectOwner();\\n        }\\n        if (s_projectState != State.FUNDING_COMLPETE) {\\n            revert NotFundingComplete();\\n        }\\n        //since reading from storage is expensive, we only do it once\\n        address[] memory m_funders = project_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < m_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = m_funders[funderIndex];\\n            addressToAmount[funder] = 0;\\n        }\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: s_totalFundingAmount\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n\\n        s_totalFundingAmount = 0;\\n        project_funders = new address[](0);\\n        s_projectState = State.OVER;\\n    }\\n\\n    //if someone sends this contract ETH without calling the fund function\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // View Functions\\n    function getProjectDetails()\\n        public\\n        view\\n        returns (string memory _title, string memory _description)\\n    {\\n        return (s_title, s_description);\\n    }\\n}\\n\",\"keccak256\":\"0xef285acf73cf88b44f56f02cdc5b22421b19be6646483be7787704b98f65c18f\",\"license\":\"MIT\"},\"contracts/ProjectFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./Project.sol\\\";\\n\\n/**\\n * @title ProjectManagerContract\\n * @author Shivam Arora\\n * @dev Project Management Contract allows users to create projects and manage them\\n */\\n\\ncontract ProjectFactory is Ownable {\\n    //Library\\n    using Counters for Counters.Counter;\\n\\n    //State\\n    Counters.Counter private _contractId;\\n\\n    struct ProjectEntity {\\n        uint16 projectId;\\n        address projectAddress;\\n    }\\n\\n    // Array to store all projects\\n    ProjectEntity[] private projects;\\n\\n    event ProjectStarted(\\n        uint16 _projectID,\\n        string _title,\\n        string _description,\\n        uint256 _project_target_price,\\n        uint256 _projest_deadline_date_unix,\\n        uint256 _project_minimum_fund_price,\\n        address _projectOwner,\\n        address _contractAddress,\\n        bytes32 _ipfs_cid\\n    );\\n\\n    //Functions\\n    function createNewProject(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _project_target_price,\\n        uint256 _projest_deadline_date_unix,\\n        uint256 _project_minimum_fund_price,\\n        bytes32 _ipfs_cid\\n    ) public {\\n        uint16 projectID = uint16(_contractId.current());\\n        Project project = new Project(\\n            projectID,\\n            _title,\\n            _description,\\n            _project_target_price,\\n            _projest_deadline_date_unix,\\n            _project_minimum_fund_price,\\n            msg.sender,\\n            _ipfs_cid\\n        );\\n\\n        projects.push(ProjectEntity(projectID, address(project)));\\n        _contractId.increment();\\n\\n        // emit event for project creation\\n        emit ProjectStarted(\\n            projectID,\\n            _title,\\n            _description,\\n            _project_target_price,\\n            _projest_deadline_date_unix,\\n            _project_minimum_fund_price,\\n            msg.sender,\\n            address(project),\\n            _ipfs_cid\\n        );\\n    }\\n\\n    //State Functions\\n    function markProjectFundingComplete(address _projectAddress)\\n        public\\n        onlyOwner\\n    {\\n        Project(payable(_projectAddress)).markFundingComplete();\\n    }\\n\\n    //View Functions\\n    function getProjectLists() public view returns (ProjectEntity[] memory) {\\n        return projects;\\n    }\\n\\n    function getProjectInfoById(uint16 _projectId)\\n        public\\n        view\\n        returns (string memory _title, string memory _description)\\n    {\\n        for (uint i = 0; i < projects.length; i++) {\\n            if (projects[i].projectId == _projectId) {\\n                address payable projectAddress = payable(\\n                    projects[i].projectAddress\\n                );\\n                return Project(projectAddress).getProjectDetails();\\n            }\\n        }\\n    }\\n\\n    function getProjectInfoByAddress(address _address)\\n        public\\n        view\\n        returns (string memory _title, string memory _description)\\n    {\\n        return Project(payable(_address)).getProjectDetails();\\n    }\\n\\n    function getCurrentProjectID() public view returns (uint16) {\\n        uint16 id = uint16(_contractId.current());\\n        return id;\\n    }\\n}\\n\",\"keccak256\":\"0x7aa43edb6bf55d7cb43df2f0c55dd1b9613a2591e397a34f22acccf665fa566a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61329f8061010d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063bee9895e116200006f578063bee9895e146200012c578063e674206a146200014c578063e8e6d91d146200016c578063f2fde38b146200018e578063f93215fe14620001ae57620000a0565b806342f1dfcf14620000a5578063715018a614620000dc5780638da5cb5b14620000e8578063944e5347146200010a575b600080fd5b620000c36004803603810190620000bd919062000940565b620001e5565b604051620000d392919062000a16565b60405180910390f35b620000e662000335565b005b620000f26200034d565b60405162000101919062000a96565b60405180910390f35b6200011462000376565b60405162000123919062000ac4565b60405180910390f35b6200014a600480360381019062000144919062000b12565b6200038e565b005b6200016a600480360381019062000164919062000d0b565b620003fd565b005b6200017662000579565b60405162000185919062000ef7565b60405180910390f35b620001ac6004803603810190620001a6919062000b12565b6200064c565b005b620001cc6004803603810190620001c6919062000b12565b620006d7565b604051620001dc92919062000a16565b60405180910390f35b60608060005b6002805490508110156200032e578361ffff166002828154811062000215576200021462000f1b565b5b9060005260206000200160000160009054906101000a900461ffff1661ffff161415620003185760006002828154811062000255576200025462000f1b565b5b9060005260206000200160000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ff3a9c7e6040518163ffffffff1660e01b815260040160006040518083038186803b158015620002cc57600080fd5b505afa158015620002e1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200030c919062000fc8565b93509350505062000330565b808062000325906200107c565b915050620001eb565b505b915091565b6200033f6200076a565b6200034b6000620007ef565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080620003856001620008b3565b90508091505090565b620003986200076a565b8073ffffffffffffffffffffffffffffffffffffffff1663f122b4346040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620003e157600080fd5b505af1158015620003f6573d6000803e3d6000fd5b5050505050565b60006200040b6001620008b3565b9050600081888888888833896040516200042590620008df565b62000438989796959493929190620010ec565b604051809103906000f08015801562000455573d6000803e3d6000fd5b509050600260405180604001604052808461ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005266001620008c1565b7f5928d6daf79f552d1ae6adbb467676b4ca58a38e4372787180a68993f73382de82898989898933888b604051620005679998979695949392919062001188565b60405180910390a15050505050505050565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101562000643578382906000526020600020016040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906200059d565b50505050905090565b620006566200076a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620006c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006c090620012ab565b60405180910390fd5b620006d481620007ef565b50565b6060808273ffffffffffffffffffffffffffffffffffffffff1663ff3a9c7e6040518163ffffffff1660e01b815260040160006040518083038186803b1580156200072157600080fd5b505afa15801562000736573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000761919062000fc8565b91509150915091565b62000774620008d7565b73ffffffffffffffffffffffffffffffffffffffff16620007946200034d565b73ffffffffffffffffffffffffffffffffffffffff1614620007ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007e4906200131d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6001816000016000828254019250508190555050565b600033905090565b611f2a806200134083390190565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6200091a8162000901565b81146200092657600080fd5b50565b6000813590506200093a816200090f565b92915050565b600060208284031215620009595762000958620008f7565b5b6000620009698482850162000929565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620009ae57808201518184015260208101905062000991565b83811115620009be576000848401525b50505050565b6000601f19601f8301169050919050565b6000620009e28262000972565b620009ee81856200097d565b935062000a008185602086016200098e565b62000a0b81620009c4565b840191505092915050565b6000604082019050818103600083015262000a328185620009d5565b9050818103602083015262000a488184620009d5565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a7e8262000a51565b9050919050565b62000a908162000a71565b82525050565b600060208201905062000aad600083018462000a85565b92915050565b62000abe8162000901565b82525050565b600060208201905062000adb600083018462000ab3565b92915050565b62000aec8162000a71565b811462000af857600080fd5b50565b60008135905062000b0c8162000ae1565b92915050565b60006020828403121562000b2b5762000b2a620008f7565b5b600062000b3b8482850162000afb565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000b8882620009c4565b810181811067ffffffffffffffff8211171562000baa5762000ba962000b4e565b5b80604052505050565b600062000bbf620008ed565b905062000bcd828262000b7d565b919050565b600067ffffffffffffffff82111562000bf05762000bef62000b4e565b5b62000bfb82620009c4565b9050602081019050919050565b82818337600083830152505050565b600062000c2e62000c288462000bd2565b62000bb3565b90508281526020810184848401111562000c4d5762000c4c62000b49565b5b62000c5a84828562000c08565b509392505050565b600082601f83011262000c7a5762000c7962000b44565b5b813562000c8c84826020860162000c17565b91505092915050565b6000819050919050565b62000caa8162000c95565b811462000cb657600080fd5b50565b60008135905062000cca8162000c9f565b92915050565b6000819050919050565b62000ce58162000cd0565b811462000cf157600080fd5b50565b60008135905062000d058162000cda565b92915050565b60008060008060008060c0878903121562000d2b5762000d2a620008f7565b5b600087013567ffffffffffffffff81111562000d4c5762000d4b620008fc565b5b62000d5a89828a0162000c62565b965050602087013567ffffffffffffffff81111562000d7e5762000d7d620008fc565b5b62000d8c89828a0162000c62565b955050604062000d9f89828a0162000cb9565b945050606062000db289828a0162000cb9565b935050608062000dc589828a0162000cb9565b92505060a062000dd889828a0162000cf4565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000e1c8162000901565b82525050565b62000e2d8162000a71565b82525050565b60408201600082015162000e4b600085018262000e11565b50602082015162000e60602085018262000e22565b50505050565b600062000e74838362000e33565b60408301905092915050565b6000602082019050919050565b600062000e9a8262000de5565b62000ea6818562000df0565b935062000eb38362000e01565b8060005b8381101562000eea57815162000ece888262000e66565b975062000edb8362000e80565b92505060018101905062000eb7565b5085935050505092915050565b6000602082019050818103600083015262000f13818462000e8d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600062000f6162000f5b8462000bd2565b62000bb3565b90508281526020810184848401111562000f805762000f7f62000b49565b5b62000f8d8482856200098e565b509392505050565b600082601f83011262000fad5762000fac62000b44565b5b815162000fbf84826020860162000f4a565b91505092915050565b6000806040838503121562000fe25762000fe1620008f7565b5b600083015167ffffffffffffffff811115620010035762001002620008fc565b5b620010118582860162000f95565b925050602083015167ffffffffffffffff811115620010355762001034620008fc565b5b620010438582860162000f95565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620010898262000c95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620010bf57620010be6200104d565b5b600182019050919050565b620010d58162000c95565b82525050565b620010e68162000cd0565b82525050565b60006101008201905062001104600083018b62000ab3565b818103602083015262001118818a620009d5565b905081810360408301526200112e8189620009d5565b90506200113f6060830188620010ca565b6200114e6080830187620010ca565b6200115d60a0830186620010ca565b6200116c60c083018562000a85565b6200117b60e0830184620010db565b9998505050505050505050565b600061012082019050620011a0600083018c62000ab3565b8181036020830152620011b4818b620009d5565b90508181036040830152620011ca818a620009d5565b9050620011db6060830189620010ca565b620011ea6080830188620010ca565b620011f960a0830187620010ca565b6200120860c083018662000a85565b6200121760e083018562000a85565b62001227610100830184620010db565b9a9950505050505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620012936026836200097d565b9150620012a08262001235565b604082019050919050565b60006020820190508181036000830152620012c68162001284565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620013056020836200097d565b91506200131282620012cd565b602082019050919050565b600060208201905081810360008301526200133881620012f6565b905091905056fe6101406040523480156200001257600080fd5b5060405162001f2a38038062001f2a83398181016040528101906200003891906200065d565b620000586200004c6200022a60201b60201c565b6200023260201b60201c565b678ac7230489e80000670de0b6b3a76400008662000077919062000793565b11620000c65784678ac7230489e800006040517f4024d4cb000000000000000000000000000000000000000000000000000000008152600401620000bd92919062000805565b60405180910390fd5b670de0b6b3a76400008084620000dd919062000793565b116200012c5782670de0b6b3a76400006040517f1689125f0000000000000000000000000000000000000000000000000000000081526004016200012392919062000805565b60405180910390fd5b8761ffff1660a08161ffff1681525050670de0b6b3a76400008562000152919062000793565b60c081815250508360e08181525050670de0b6b3a76400008362000177919062000793565b6101008181525050866001908051906020019062000197929190620002f6565b508560029080519060200190620001b0929190620002f6565b506000600460006101000a81548160ff02191690836002811115620001da57620001d962000832565b5b02179055508173ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff168152505080608081815250505050505050505050620008c6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620003049062000890565b90600052602060002090601f01602090048101928262000328576000855562000374565b82601f106200034357805160ff191683800117855562000374565b8280016001018555821562000374579182015b828111156200037357825182559160200191906001019062000356565b5b50905062000383919062000387565b5090565b5b80821115620003a257600081600090555060010162000388565b5090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b620003d381620003ba565b8114620003df57600080fd5b50565b600081519050620003f381620003c8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044e8262000403565b810181811067ffffffffffffffff8211171562000470576200046f62000414565b5b80604052505050565b600062000485620003a6565b905062000493828262000443565b919050565b600067ffffffffffffffff821115620004b657620004b562000414565b5b620004c18262000403565b9050602081019050919050565b60005b83811015620004ee578082015181840152602081019050620004d1565b83811115620004fe576000848401525b50505050565b60006200051b620005158462000498565b62000479565b9050828152602081018484840111156200053a5762000539620003fe565b5b62000547848285620004ce565b509392505050565b600082601f830112620005675762000566620003f9565b5b81516200057984826020860162000504565b91505092915050565b6000819050919050565b620005978162000582565b8114620005a357600080fd5b50565b600081519050620005b7816200058c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005ea82620005bd565b9050919050565b620005fc81620005dd565b81146200060857600080fd5b50565b6000815190506200061c81620005f1565b92915050565b6000819050919050565b620006378162000622565b81146200064357600080fd5b50565b60008151905062000657816200062c565b92915050565b600080600080600080600080610100898b031215620006815762000680620003b0565b5b6000620006918b828c01620003e2565b985050602089015167ffffffffffffffff811115620006b557620006b4620003b5565b5b620006c38b828c016200054f565b975050604089015167ffffffffffffffff811115620006e757620006e6620003b5565b5b620006f58b828c016200054f565b9650506060620007088b828c01620005a6565b95505060806200071b8b828c01620005a6565b94505060a06200072e8b828c01620005a6565b93505060c0620007418b828c016200060b565b92505060e0620007548b828c0162000646565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007a08262000582565b9150620007ad8362000582565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007e957620007e862000764565b5b828202905092915050565b620007ff8162000582565b82525050565b60006040820190506200081c6000830185620007f4565b6200082b6020830184620007f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008a957607f821691505b60208210811415620008c057620008bf62000861565b5b50919050565b60805160a05160c05160e051610100516101205161160662000924600039600081816105bd0152610b4501526000818161041d0152610a2b01526000610b69015260006109bc01526000610992015260006109f401526116066000f3fe6080604052600436106101185760003560e01c80638bea3ddb116100a0578063b78835f711610064578063b78835f714610359578063eac13fd614610384578063f122b434146103af578063f2fde38b146103c6578063ff3a9c7e146103ef57610127565b80638bea3ddb146102915780638da5cb5b146102bc57806399a8502d146102e7578063acd00abb14610312578063b60d42881461034f57610127565b80636f8939b6116100e75780636f8939b6146101ce5780637032a634146101f9578063715018a6146102245780637f0d5b601461023b578063817cfe971461026657610127565b80633c7e7d28146101315780633ccfd60b1461016e5780634ef89719146101785780636a988abc146101a357610127565b366101275761012561041b565b005b61012f61041b565b005b34801561013d57600080fd5b5061015860048036038101906101539190610fbf565b6105a3565b6040516101659190611005565b60405180910390f35b6101766105bb565b005b34801561018457600080fd5b5061018d610902565b60405161019a91906110b9565b60405180910390f35b3480156101af57600080fd5b506101b8610990565b6040516101c591906110f8565b60405180910390f35b3480156101da57600080fd5b506101e36109b4565b6040516101f09190611005565b60405180910390f35b34801561020557600080fd5b5061020e6109ba565b60405161021b9190611005565b60405180910390f35b34801561023057600080fd5b506102396109de565b005b34801561024757600080fd5b506102506109f2565b60405161025d919061112c565b60405180910390f35b34801561027257600080fd5b5061027b610a16565b60405161028891906111be565b60405180910390f35b34801561029d57600080fd5b506102a6610a29565b6040516102b39190611005565b60405180910390f35b3480156102c857600080fd5b506102d1610a4d565b6040516102de91906111e8565b60405180910390f35b3480156102f357600080fd5b506102fc610a76565b60405161030991906110b9565b60405180910390f35b34801561031e57600080fd5b506103396004803603810190610334919061122f565b610b04565b60405161034691906111e8565b60405180910390f35b61035761041b565b005b34801561036557600080fd5b5061036e610b43565b60405161037b91906111e8565b60405180910390f35b34801561039057600080fd5b50610399610b67565b6040516103a69190611005565b60405180910390f35b3480156103bb57600080fd5b506103c4610b8b565b005b3480156103d257600080fd5b506103ed60048036038101906103e89190610fbf565b610bc0565b005b3480156103fb57600080fd5b50610404610c44565b60405161041292919061125c565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000003411610474576040517fecf05e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561048857610487611147565b5b600460009054906101000a900460ff1660028111156104aa576104a9611147565b5b146104e1576040517f9c916c9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550346003600082825461059a91906112c2565b92505081905550565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610640576040517f7c2411e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561065457610653611147565b5b600460009054906101000a900460ff16600281111561067657610675611147565b5b146106ad576040517fa29c800d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600680548060200260200160405190810160405280929190818152602001828054801561073157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e7575b5050505050905060005b81518110156107bc57600082828151811061075957610758611318565b5b602002602001015190506000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b490611347565b91505061073b565b5060003373ffffffffffffffffffffffffffffffffffffffff166003546040516107e5906113c1565b60006040518083038185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b505090508061086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290611422565b60405180910390fd5b6000600381905550600067ffffffffffffffff81111561088e5761088d611442565b5b6040519080825280602002602001820160405280156108bc5781602001602082028036833780820191505090505b50600690805190602001906108d2929190610eb5565b506002600460006101000a81548160ff021916908360028111156108f9576108f8611147565b5b02179055505050565b6002805461090f906114a0565b80601f016020809104026020016040519081016040528092919081815260200182805461093b906114a0565b80156109885780601f1061095d57610100808354040283529160200191610988565b820191906000526020600020905b81548152906001019060200180831161096b57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109e6610d6b565b6109f06000610de9565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600460009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610a83906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf906114a0565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b505050505081565b60068181548110610b1457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b93610d6b565b6001600460006101000a81548160ff02191690836002811115610bb957610bb8611147565b5b0217905550565b610bc8610d6b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611544565b60405180910390fd5b610c4181610de9565b50565b60608060016002818054610c57906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c83906114a0565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b50505050509150808054610ce3906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f906114a0565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b50505050509050915091509091565b610d73610ead565b73ffffffffffffffffffffffffffffffffffffffff16610d91610a4d565b73ffffffffffffffffffffffffffffffffffffffff1614610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde906115b0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054828255906000526020600020908101928215610f2e579160200282015b82811115610f2d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ed5565b5b509050610f3b9190610f3f565b5090565b5b80821115610f58576000816000905550600101610f40565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8c82610f61565b9050919050565b610f9c81610f81565b8114610fa757600080fd5b50565b600081359050610fb981610f93565b92915050565b600060208284031215610fd557610fd4610f5c565b5b6000610fe384828501610faa565b91505092915050565b6000819050919050565b610fff81610fec565b82525050565b600060208201905061101a6000830184610ff6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561105a57808201518184015260208101905061103f565b83811115611069576000848401525b50505050565b6000601f19601f8301169050919050565b600061108b82611020565b611095818561102b565b93506110a581856020860161103c565b6110ae8161106f565b840191505092915050565b600060208201905081810360008301526110d38184611080565b905092915050565b600061ffff82169050919050565b6110f2816110db565b82525050565b600060208201905061110d60008301846110e9565b92915050565b6000819050919050565b61112681611113565b82525050565b6000602082019050611141600083018461111d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061118757611186611147565b5b50565b600081905061119882611176565b919050565b60006111a88261118a565b9050919050565b6111b88161119d565b82525050565b60006020820190506111d360008301846111af565b92915050565b6111e281610f81565b82525050565b60006020820190506111fd60008301846111d9565b92915050565b61120c81610fec565b811461121757600080fd5b50565b60008135905061122981611203565b92915050565b60006020828403121561124557611244610f5c565b5b60006112538482850161121a565b91505092915050565b600060408201905081810360008301526112768185611080565b9050818103602083015261128a8184611080565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112cd82610fec565b91506112d883610fec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561130d5761130c611293565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061135282610fec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561138557611384611293565b5b600182019050919050565b600081905092915050565b50565b60006113ab600083611390565b91506113b68261139b565b600082019050919050565b60006113cc8261139e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061140c600b8361102b565b9150611417826113d6565b602082019050919050565b6000602082019050818103600083015261143b816113ff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114b857607f821691505b602082108114156114cc576114cb611471565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061152e60268361102b565b9150611539826114d2565b604082019050919050565b6000602082019050818103600083015261155d81611521565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061159a60208361102b565b91506115a582611564565b602082019050919050565b600060208201905081810360008301526115c98161158d565b905091905056fea2646970667358221220c360305d6e2931cd958ce0eda2e397c149ad513e06e5723b7b6dc670be7b913d64736f6c63430008090033a2646970667358221220cad7405a192a56b67ba258c0e8f4682b1f911c4997fb2ae06436f1e2b099e38564736f6c63430008090033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063bee9895e116200006f578063bee9895e146200012c578063e674206a146200014c578063e8e6d91d146200016c578063f2fde38b146200018e578063f93215fe14620001ae57620000a0565b806342f1dfcf14620000a5578063715018a614620000dc5780638da5cb5b14620000e8578063944e5347146200010a575b600080fd5b620000c36004803603810190620000bd919062000940565b620001e5565b604051620000d392919062000a16565b60405180910390f35b620000e662000335565b005b620000f26200034d565b60405162000101919062000a96565b60405180910390f35b6200011462000376565b60405162000123919062000ac4565b60405180910390f35b6200014a600480360381019062000144919062000b12565b6200038e565b005b6200016a600480360381019062000164919062000d0b565b620003fd565b005b6200017662000579565b60405162000185919062000ef7565b60405180910390f35b620001ac6004803603810190620001a6919062000b12565b6200064c565b005b620001cc6004803603810190620001c6919062000b12565b620006d7565b604051620001dc92919062000a16565b60405180910390f35b60608060005b6002805490508110156200032e578361ffff166002828154811062000215576200021462000f1b565b5b9060005260206000200160000160009054906101000a900461ffff1661ffff161415620003185760006002828154811062000255576200025462000f1b565b5b9060005260206000200160000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ff3a9c7e6040518163ffffffff1660e01b815260040160006040518083038186803b158015620002cc57600080fd5b505afa158015620002e1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200030c919062000fc8565b93509350505062000330565b808062000325906200107c565b915050620001eb565b505b915091565b6200033f6200076a565b6200034b6000620007ef565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080620003856001620008b3565b90508091505090565b620003986200076a565b8073ffffffffffffffffffffffffffffffffffffffff1663f122b4346040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620003e157600080fd5b505af1158015620003f6573d6000803e3d6000fd5b5050505050565b60006200040b6001620008b3565b9050600081888888888833896040516200042590620008df565b62000438989796959493929190620010ec565b604051809103906000f08015801562000455573d6000803e3d6000fd5b509050600260405180604001604052808461ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005266001620008c1565b7f5928d6daf79f552d1ae6adbb467676b4ca58a38e4372787180a68993f73382de82898989898933888b604051620005679998979695949392919062001188565b60405180910390a15050505050505050565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101562000643578382906000526020600020016040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906200059d565b50505050905090565b620006566200076a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620006c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006c090620012ab565b60405180910390fd5b620006d481620007ef565b50565b6060808273ffffffffffffffffffffffffffffffffffffffff1663ff3a9c7e6040518163ffffffff1660e01b815260040160006040518083038186803b1580156200072157600080fd5b505afa15801562000736573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000761919062000fc8565b91509150915091565b62000774620008d7565b73ffffffffffffffffffffffffffffffffffffffff16620007946200034d565b73ffffffffffffffffffffffffffffffffffffffff1614620007ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007e4906200131d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6001816000016000828254019250508190555050565b600033905090565b611f2a806200134083390190565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6200091a8162000901565b81146200092657600080fd5b50565b6000813590506200093a816200090f565b92915050565b600060208284031215620009595762000958620008f7565b5b6000620009698482850162000929565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620009ae57808201518184015260208101905062000991565b83811115620009be576000848401525b50505050565b6000601f19601f8301169050919050565b6000620009e28262000972565b620009ee81856200097d565b935062000a008185602086016200098e565b62000a0b81620009c4565b840191505092915050565b6000604082019050818103600083015262000a328185620009d5565b9050818103602083015262000a488184620009d5565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a7e8262000a51565b9050919050565b62000a908162000a71565b82525050565b600060208201905062000aad600083018462000a85565b92915050565b62000abe8162000901565b82525050565b600060208201905062000adb600083018462000ab3565b92915050565b62000aec8162000a71565b811462000af857600080fd5b50565b60008135905062000b0c8162000ae1565b92915050565b60006020828403121562000b2b5762000b2a620008f7565b5b600062000b3b8482850162000afb565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000b8882620009c4565b810181811067ffffffffffffffff8211171562000baa5762000ba962000b4e565b5b80604052505050565b600062000bbf620008ed565b905062000bcd828262000b7d565b919050565b600067ffffffffffffffff82111562000bf05762000bef62000b4e565b5b62000bfb82620009c4565b9050602081019050919050565b82818337600083830152505050565b600062000c2e62000c288462000bd2565b62000bb3565b90508281526020810184848401111562000c4d5762000c4c62000b49565b5b62000c5a84828562000c08565b509392505050565b600082601f83011262000c7a5762000c7962000b44565b5b813562000c8c84826020860162000c17565b91505092915050565b6000819050919050565b62000caa8162000c95565b811462000cb657600080fd5b50565b60008135905062000cca8162000c9f565b92915050565b6000819050919050565b62000ce58162000cd0565b811462000cf157600080fd5b50565b60008135905062000d058162000cda565b92915050565b60008060008060008060c0878903121562000d2b5762000d2a620008f7565b5b600087013567ffffffffffffffff81111562000d4c5762000d4b620008fc565b5b62000d5a89828a0162000c62565b965050602087013567ffffffffffffffff81111562000d7e5762000d7d620008fc565b5b62000d8c89828a0162000c62565b955050604062000d9f89828a0162000cb9565b945050606062000db289828a0162000cb9565b935050608062000dc589828a0162000cb9565b92505060a062000dd889828a0162000cf4565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b62000e1c8162000901565b82525050565b62000e2d8162000a71565b82525050565b60408201600082015162000e4b600085018262000e11565b50602082015162000e60602085018262000e22565b50505050565b600062000e74838362000e33565b60408301905092915050565b6000602082019050919050565b600062000e9a8262000de5565b62000ea6818562000df0565b935062000eb38362000e01565b8060005b8381101562000eea57815162000ece888262000e66565b975062000edb8362000e80565b92505060018101905062000eb7565b5085935050505092915050565b6000602082019050818103600083015262000f13818462000e8d565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600062000f6162000f5b8462000bd2565b62000bb3565b90508281526020810184848401111562000f805762000f7f62000b49565b5b62000f8d8482856200098e565b509392505050565b600082601f83011262000fad5762000fac62000b44565b5b815162000fbf84826020860162000f4a565b91505092915050565b6000806040838503121562000fe25762000fe1620008f7565b5b600083015167ffffffffffffffff811115620010035762001002620008fc565b5b620010118582860162000f95565b925050602083015167ffffffffffffffff811115620010355762001034620008fc565b5b620010438582860162000f95565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620010898262000c95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620010bf57620010be6200104d565b5b600182019050919050565b620010d58162000c95565b82525050565b620010e68162000cd0565b82525050565b60006101008201905062001104600083018b62000ab3565b818103602083015262001118818a620009d5565b905081810360408301526200112e8189620009d5565b90506200113f6060830188620010ca565b6200114e6080830187620010ca565b6200115d60a0830186620010ca565b6200116c60c083018562000a85565b6200117b60e0830184620010db565b9998505050505050505050565b600061012082019050620011a0600083018c62000ab3565b8181036020830152620011b4818b620009d5565b90508181036040830152620011ca818a620009d5565b9050620011db6060830189620010ca565b620011ea6080830188620010ca565b620011f960a0830187620010ca565b6200120860c083018662000a85565b6200121760e083018562000a85565b62001227610100830184620010db565b9a9950505050505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620012936026836200097d565b9150620012a08262001235565b604082019050919050565b60006020820190508181036000830152620012c68162001284565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620013056020836200097d565b91506200131282620012cd565b602082019050919050565b600060208201905081810360008301526200133881620012f6565b905091905056fe6101406040523480156200001257600080fd5b5060405162001f2a38038062001f2a83398181016040528101906200003891906200065d565b620000586200004c6200022a60201b60201c565b6200023260201b60201c565b678ac7230489e80000670de0b6b3a76400008662000077919062000793565b11620000c65784678ac7230489e800006040517f4024d4cb000000000000000000000000000000000000000000000000000000008152600401620000bd92919062000805565b60405180910390fd5b670de0b6b3a76400008084620000dd919062000793565b116200012c5782670de0b6b3a76400006040517f1689125f0000000000000000000000000000000000000000000000000000000081526004016200012392919062000805565b60405180910390fd5b8761ffff1660a08161ffff1681525050670de0b6b3a76400008562000152919062000793565b60c081815250508360e08181525050670de0b6b3a76400008362000177919062000793565b6101008181525050866001908051906020019062000197929190620002f6565b508560029080519060200190620001b0929190620002f6565b506000600460006101000a81548160ff02191690836002811115620001da57620001d962000832565b5b02179055508173ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff168152505080608081815250505050505050505050620008c6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620003049062000890565b90600052602060002090601f01602090048101928262000328576000855562000374565b82601f106200034357805160ff191683800117855562000374565b8280016001018555821562000374579182015b828111156200037357825182559160200191906001019062000356565b5b50905062000383919062000387565b5090565b5b80821115620003a257600081600090555060010162000388565b5090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b620003d381620003ba565b8114620003df57600080fd5b50565b600081519050620003f381620003c8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200044e8262000403565b810181811067ffffffffffffffff8211171562000470576200046f62000414565b5b80604052505050565b600062000485620003a6565b905062000493828262000443565b919050565b600067ffffffffffffffff821115620004b657620004b562000414565b5b620004c18262000403565b9050602081019050919050565b60005b83811015620004ee578082015181840152602081019050620004d1565b83811115620004fe576000848401525b50505050565b60006200051b620005158462000498565b62000479565b9050828152602081018484840111156200053a5762000539620003fe565b5b62000547848285620004ce565b509392505050565b600082601f830112620005675762000566620003f9565b5b81516200057984826020860162000504565b91505092915050565b6000819050919050565b620005978162000582565b8114620005a357600080fd5b50565b600081519050620005b7816200058c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005ea82620005bd565b9050919050565b620005fc81620005dd565b81146200060857600080fd5b50565b6000815190506200061c81620005f1565b92915050565b6000819050919050565b620006378162000622565b81146200064357600080fd5b50565b60008151905062000657816200062c565b92915050565b600080600080600080600080610100898b031215620006815762000680620003b0565b5b6000620006918b828c01620003e2565b985050602089015167ffffffffffffffff811115620006b557620006b4620003b5565b5b620006c38b828c016200054f565b975050604089015167ffffffffffffffff811115620006e757620006e6620003b5565b5b620006f58b828c016200054f565b9650506060620007088b828c01620005a6565b95505060806200071b8b828c01620005a6565b94505060a06200072e8b828c01620005a6565b93505060c0620007418b828c016200060b565b92505060e0620007548b828c0162000646565b9150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007a08262000582565b9150620007ad8362000582565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620007e957620007e862000764565b5b828202905092915050565b620007ff8162000582565b82525050565b60006040820190506200081c6000830185620007f4565b6200082b6020830184620007f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620008a957607f821691505b60208210811415620008c057620008bf62000861565b5b50919050565b60805160a05160c05160e051610100516101205161160662000924600039600081816105bd0152610b4501526000818161041d0152610a2b01526000610b69015260006109bc01526000610992015260006109f401526116066000f3fe6080604052600436106101185760003560e01c80638bea3ddb116100a0578063b78835f711610064578063b78835f714610359578063eac13fd614610384578063f122b434146103af578063f2fde38b146103c6578063ff3a9c7e146103ef57610127565b80638bea3ddb146102915780638da5cb5b146102bc57806399a8502d146102e7578063acd00abb14610312578063b60d42881461034f57610127565b80636f8939b6116100e75780636f8939b6146101ce5780637032a634146101f9578063715018a6146102245780637f0d5b601461023b578063817cfe971461026657610127565b80633c7e7d28146101315780633ccfd60b1461016e5780634ef89719146101785780636a988abc146101a357610127565b366101275761012561041b565b005b61012f61041b565b005b34801561013d57600080fd5b5061015860048036038101906101539190610fbf565b6105a3565b6040516101659190611005565b60405180910390f35b6101766105bb565b005b34801561018457600080fd5b5061018d610902565b60405161019a91906110b9565b60405180910390f35b3480156101af57600080fd5b506101b8610990565b6040516101c591906110f8565b60405180910390f35b3480156101da57600080fd5b506101e36109b4565b6040516101f09190611005565b60405180910390f35b34801561020557600080fd5b5061020e6109ba565b60405161021b9190611005565b60405180910390f35b34801561023057600080fd5b506102396109de565b005b34801561024757600080fd5b506102506109f2565b60405161025d919061112c565b60405180910390f35b34801561027257600080fd5b5061027b610a16565b60405161028891906111be565b60405180910390f35b34801561029d57600080fd5b506102a6610a29565b6040516102b39190611005565b60405180910390f35b3480156102c857600080fd5b506102d1610a4d565b6040516102de91906111e8565b60405180910390f35b3480156102f357600080fd5b506102fc610a76565b60405161030991906110b9565b60405180910390f35b34801561031e57600080fd5b506103396004803603810190610334919061122f565b610b04565b60405161034691906111e8565b60405180910390f35b61035761041b565b005b34801561036557600080fd5b5061036e610b43565b60405161037b91906111e8565b60405180910390f35b34801561039057600080fd5b50610399610b67565b6040516103a69190611005565b60405180910390f35b3480156103bb57600080fd5b506103c4610b8b565b005b3480156103d257600080fd5b506103ed60048036038101906103e89190610fbf565b610bc0565b005b3480156103fb57600080fd5b50610404610c44565b60405161041292919061125c565b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000003411610474576040517fecf05e1000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600281111561048857610487611147565b5b600460009054906101000a900460ff1660028111156104aa576104a9611147565b5b146104e1576040517f9c916c9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550346003600082825461059a91906112c2565b92505081905550565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610640576040517f7c2411e900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600281111561065457610653611147565b5b600460009054906101000a900460ff16600281111561067657610675611147565b5b146106ad576040517fa29c800d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600680548060200260200160405190810160405280929190818152602001828054801561073157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e7575b5050505050905060005b81518110156107bc57600082828151811061075957610758611318565b5b602002602001015190506000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b490611347565b91505061073b565b5060003373ffffffffffffffffffffffffffffffffffffffff166003546040516107e5906113c1565b60006040518083038185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b505090508061086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290611422565b60405180910390fd5b6000600381905550600067ffffffffffffffff81111561088e5761088d611442565b5b6040519080825280602002602001820160405280156108bc5781602001602082028036833780820191505090505b50600690805190602001906108d2929190610eb5565b506002600460006101000a81548160ff021916908360028111156108f9576108f8611147565b5b02179055505050565b6002805461090f906114a0565b80601f016020809104026020016040519081016040528092919081815260200182805461093b906114a0565b80156109885780601f1061095d57610100808354040283529160200191610988565b820191906000526020600020905b81548152906001019060200180831161096b57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109e6610d6b565b6109f06000610de9565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b600460009054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018054610a83906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf906114a0565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b505050505081565b60068181548110610b1457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b93610d6b565b6001600460006101000a81548160ff02191690836002811115610bb957610bb8611147565b5b0217905550565b610bc8610d6b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611544565b60405180910390fd5b610c4181610de9565b50565b60608060016002818054610c57906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c83906114a0565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b50505050509150808054610ce3906114a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0f906114a0565b8015610d5c5780601f10610d3157610100808354040283529160200191610d5c565b820191906000526020600020905b815481529060010190602001808311610d3f57829003601f168201915b50505050509050915091509091565b610d73610ead565b73ffffffffffffffffffffffffffffffffffffffff16610d91610a4d565b73ffffffffffffffffffffffffffffffffffffffff1614610de7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dde906115b0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054828255906000526020600020908101928215610f2e579160200282015b82811115610f2d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ed5565b5b509050610f3b9190610f3f565b5090565b5b80821115610f58576000816000905550600101610f40565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8c82610f61565b9050919050565b610f9c81610f81565b8114610fa757600080fd5b50565b600081359050610fb981610f93565b92915050565b600060208284031215610fd557610fd4610f5c565b5b6000610fe384828501610faa565b91505092915050565b6000819050919050565b610fff81610fec565b82525050565b600060208201905061101a6000830184610ff6565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561105a57808201518184015260208101905061103f565b83811115611069576000848401525b50505050565b6000601f19601f8301169050919050565b600061108b82611020565b611095818561102b565b93506110a581856020860161103c565b6110ae8161106f565b840191505092915050565b600060208201905081810360008301526110d38184611080565b905092915050565b600061ffff82169050919050565b6110f2816110db565b82525050565b600060208201905061110d60008301846110e9565b92915050565b6000819050919050565b61112681611113565b82525050565b6000602082019050611141600083018461111d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061118757611186611147565b5b50565b600081905061119882611176565b919050565b60006111a88261118a565b9050919050565b6111b88161119d565b82525050565b60006020820190506111d360008301846111af565b92915050565b6111e281610f81565b82525050565b60006020820190506111fd60008301846111d9565b92915050565b61120c81610fec565b811461121757600080fd5b50565b60008135905061122981611203565b92915050565b60006020828403121561124557611244610f5c565b5b60006112538482850161121a565b91505092915050565b600060408201905081810360008301526112768185611080565b9050818103602083015261128a8184611080565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112cd82610fec565b91506112d883610fec565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561130d5761130c611293565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061135282610fec565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561138557611384611293565b5b600182019050919050565b600081905092915050565b50565b60006113ab600083611390565b91506113b68261139b565b600082019050919050565b60006113cc8261139e565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061140c600b8361102b565b9150611417826113d6565b602082019050919050565b6000602082019050818103600083015261143b816113ff565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114b857607f821691505b602082108114156114cc576114cb611471565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061152e60268361102b565b9150611539826114d2565b604082019050919050565b6000602082019050818103600083015261155d81611521565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061159a60208361102b565b91506115a582611564565b602082019050919050565b600060208201905081810360008301526115c98161158d565b905091905056fea2646970667358221220c360305d6e2931cd958ce0eda2e397c149ad513e06e5723b7b6dc670be7b913d64736f6c63430008090033a2646970667358221220cad7405a192a56b67ba258c0e8f4682b1f911c4997fb2ae06436f1e2b099e38564736f6c63430008090033",
  "devdoc": {
    "author": "Shivam Arora",
    "details": "Project Management Contract allows users to create projects and manage them",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ProjectManagerContract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/ProjectFactory.sol:ProjectFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 543,
        "contract": "contracts/ProjectFactory.sol:ProjectFactory",
        "label": "_contractId",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)140_storage"
      },
      {
        "astId": 552,
        "contract": "contracts/ProjectFactory.sol:ProjectFactory",
        "label": "projects",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(ProjectEntity)548_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(ProjectEntity)548_storage)dyn_storage": {
        "base": "t_struct(ProjectEntity)548_storage",
        "encoding": "dynamic_array",
        "label": "struct ProjectFactory.ProjectEntity[]",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)140_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 139,
            "contract": "contracts/ProjectFactory.sol:ProjectFactory",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(ProjectEntity)548_storage": {
        "encoding": "inplace",
        "label": "struct ProjectFactory.ProjectEntity",
        "members": [
          {
            "astId": 545,
            "contract": "contracts/ProjectFactory.sol:ProjectFactory",
            "label": "projectId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 547,
            "contract": "contracts/ProjectFactory.sol:ProjectFactory",
            "label": "projectAddress",
            "offset": 2,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}